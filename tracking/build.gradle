buildscript {
  repositories {
    maven { url 'https://plugins.gradle.org/m2/' }
  }
  dependencies {
    classpath 'com.netflix.nebula:gradle-ospackage-plugin:4.3.0'
  }
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'nebula.ospackage-application'
apply plugin: 'maven'

repositories {
  mavenCentral()
  maven {
    url 'https://repo.swim.it/swim-public/'
  }
}

group = 'it.swim'
description = "Swim transit"
sourceCompatibility = 1.8
version = project.property("application.version")

configurations.all {
  resolutionStrategy {
    cacheChangingModulesFor 3600, 'seconds'
  }
}

dependencies {
  compile 'ai.swim:swim-server-client:1.2.1'
  compile 'ai.swim:swim-app-api:0.1'
}

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

compileJava {
  options.compilerArgs += ['-Xlint']
}

compileTestJava {
  options.compilerArgs += ['-Xlint']
}

javadoc {
  options.charSet = 'UTF-8'
}

task javadocJar(type: Jar) {
  classifier = 'javadoc'
  from javadoc
}

task sourcesJar(type: Jar) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

artifacts {
  archives javadocJar, sourcesJar
}

task runMain(type: JavaExec) {
  main = mainClassName
  systemProperties System.properties
}

mainClassName = 'it.swim.transit.TransitPlane'

task packageDeb(type: Deb) {
  maintainer = 'developers@swim.ai'

  configurationFile("/etc/sysconfig/${project.name}")
  preInstall "addgroup --quiet --system ${project.name}"
  preInstall "adduser --quiet --system --ingroup ${project.name} --no-create-home --disabled-password ${project.name}"
  postInstall "systemctl preset ${project.name} > /dev/null 2>&1"
  postInstall "systemctl start ${project.name} > /dev/null 2>&1"
  preUninstall  "systemctl disable ${project.name} > /dev/null 2>&1"
  preUninstall  "systemctl stop ${project.name} > /dev/null 2>&1"
  postUninstall "systemctl daemon-reload > /dev/null 2>&1"

  from('pkg') {
    into '/etc/systemd/system'
    include '*.service'
    addParentDirs false
    expand project.properties
    user 'root'
    permissionGroup 'root'
    fileMode = 0644
  }

  from('pkg') {
    into '/etc/sysconfig'
    include "${project.name}"
    user 'root'
    permissionGroup 'root'
    fileMode = 0644
    fileType CONFIG | NOREPLACE
  }
}


//usage: gradle genApiRecon -Dapp.recon=/transit=space.recon -Doutput=src/ui/api/
task genApiRecon(type: JavaExec) {
  main = 'ai.swim.app.api.ApiReconGenerator'
  classpath = sourceSets.test.runtimeClasspath
  systemProperties System.properties
}
